- authors:

  - who: Arjen Rouvoet
    affiliation: Delft University of Technology
  - who: Casper Bach Poulsen
    affiliation: Delft University of Technology
    site: http://casperbp.net/
  - who: Robbert Krebbers
    affiliation: Delft University of Technology
    site: https://robbertkrebbers.nl/
  - who: Eelco Visser
    affiliation: Delft University of Technology
    site: http://eelcovisser.org/

  publication:

  title: Intrinsically-Typed Definitional Interpreters for Session-Typed Languages

  abstract: >
    An intrinsically-typed definitional interpreter is an attractive
    way of specifying the dynamic semantics of a programming language.
    It is a concise specification that is executable and type safe by
    construction.  Unfortunately, scaling up intrinsically-typed
    definitional interpreters to more complicated object languages
    often results in definitions that are cluttered with manual proof
    work.  In linearly-typed languages (e.g., session-typed languages)
    one has to ensure that all values are used linearly, and that
    linearity is maintained throughout the definition of the
    interpreter.

    We present new methods and tools that make it possible to
    implement intrinsically-typed definitional interpreters for
    linearly-typed languages in a way that hides the majority of the
    manual proof work.  Inspired by separation logic, we develop
    reusable and composable abstractions for programming with linear
    operations using dependent types.  We use these abstractions to
    define interpreters for linearly-typed lambda calculi with strong
    references, and concurrent, session-typed communication in Agda.

  links:
    code: https://github.com/metaborg/linear.agda